[package]
name = "autoagents-burn"
version.workspace = true
edition.workspace = true
license.workspace = true
description.workspace = true
repository.workspace = true
keywords.workspace = true
categories.workspace = true

[lib]
crate-type = ["cdylib", "rlib"]
# For now until stable release is used
test = false

[features]
default = []

# Backends
ndarray = ["burn/ndarray"]
webgpu = ["burn/webgpu"]
cuda = ["burn/cuda", "burn/default"]
rocm = [
    "burn/rocm",
    "burn/default",
]
metal = ["burn/metal"]
wgpu = ["burn/wgpu", "burn/default"]
vulkan = ["burn/vulkan", "burn/default"]
candle-metal = ["burn/candle", "burn/metal", "burn/candle-metal"]
candle-cpu = ["burn/candle"]

# Element type
f16 = []
bf16 = []
f32 = []

# Utils
import = ["burn-import", "burn-import/pytorch"]
pretrained = ["burn/network", "dep:dirs"]

# Models
tiny = ["dep:tokenizers"]
llama3 = ["dep:tiktoken-rs", "dep:rustc-hash", "dep:base64"]

# Test specific features
test-non-default = []
test-ndarray = ["burn/ndarray"]

[dependencies]
autoagents-llm.workspace = true

# Burn Related Imports
burn = { git = "https://github.com/tracel-ai/burn", features = [
    "std",
    "ndarray"
], default-features = false, rev = "c56f5ab2046c7dbc28e642c0a08624c4ec290106" }
burn-import = { git = "https://github.com/tracel-ai/burn", optional = true, default-features = false, rev = "c56f5ab2046c7dbc28e642c0a08624c4ec290106" }

# Tiktoken tokenizer (llama 3)
tiktoken-rs = { version = "0.7.0", optional = true }
base64 = { workspace = true, optional = true }
rustc-hash = { version = "1.1.0", optional = true }

# SentencePiece tokenizer (tiny llama / llama 2)
tokenizers = { version = "0.22.0", default-features = false, optional = true, features = [
    "unstable_wasm",
] }

rand = { workspace = true }
futures = { workspace = true }
serde = { workspace = true, default-features = false, features = [
    "derive",
    "alloc",
] }
dirs = { workspace = true, optional = true }
log = { workspace = true, features = ["std"] }
cfg-if = { version = "1.0.1" }
futures-core = "0.3.31"
futures-util = "0.3.31"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio-stream.workspace = true
tokio = { workspace = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4.50"
getrandom = { workspace = true, features = ["wasm_js"] }
uuid = { workspace = true, features = ["serde", "v4", "js"] }